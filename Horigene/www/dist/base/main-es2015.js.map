{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Search/Services/http.service.ts","./src/app/Search/Services/search.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from '@angular/core';\r\n// Statics\r\nimport 'rxjs/add/observable/throw';\r\n// Operators\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\n\r\n/**\r\n * Utils service method that can be used to make all the differet service calls\r\n *\r\n * @export\r\n * @class HttpService\r\n */\r\n@Injectable()\r\nexport class HttpService {\r\n  /**\r\n   * Creates an instance of HttpService.\r\n   *\r\n   * @param {HttpClient} http\r\n   * @memberof HttpService\r\n   */\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n   * For handling all get requests\r\n   *\r\n   * @template T\r\n   * @param {string} url\r\n   * @param {{}} options\r\n   * @returns {Observable<T>}\r\n   * @memberof HttpService\r\n   */\r\n  get<T>(url: string, options: {} = {}): Observable<T> {\r\n    return this.http.get<T>(url, options)\r\n      .map((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        return Observable.throw(error);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * For handling all post requests\r\n   *\r\n   * @template T\r\n   * @param {string} url\r\n   * @param {string} body\r\n   * @param {{}} options\r\n   * @returns {Observable<T>}\r\n   * @memberof HttpService\r\n   */\r\n  post<T>(url: string, body: string = null, options?:object): Observable<T> {\r\n    if (options ==null){\r\n      options = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n      })\r\n    };\r\n  }\r\n  else{\r\n    options =options\r\n  }\r\n    return this.http.post<T>(url, body, options)\r\n      .map((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        return Observable.throw(error);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * For handling all put requests\r\n   *\r\n   * @template T\r\n   * @param {string} url\r\n   * @param {string} body\r\n   * @param {{}} options\r\n   * @returns {Observable<T>}\r\n   * @memberof HttpService\r\n   */\r\n  put<T>(url: string, body: any = null, options: {} = {}): Observable<T> {\r\n    return this.http.put<T>(url, body, options)\r\n      .map((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        return Observable.throw(error);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * For handling all delete requests\r\n   *\r\n   * @template T\r\n   * @param {string} url\r\n   * @param {{}} options\r\n   * @returns {Observable<T>}\r\n   * @memberof HttpService\r\n   */\r\n  delete<T>(url: string, param: any = null): Observable<T> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders(), body: param\r\n    };\r\n    return this.http.delete<T>(url, httpOptions)\r\n      .map((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        return Observable.throw(error);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * For handling all patch requests\r\n   *\r\n   * @template T\r\n   * @param {string} url\r\n   * @param {string} body\r\n   * @param {{}} options\r\n   * @returns {Observable<T>}\r\n   * @memberof HttpService\r\n   */\r\n  patch<T>(url: string, body: string, options: {} = {}): Observable<T> {\r\n    return this.http.patch<T>(url, body, options)\r\n      .map((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        return Observable.throw(error);\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpService } from \"./http.service\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/debounceTime\";\r\nimport \"rxjs/add/operator/distinctUntilChanged\";\r\nimport \"rxjs/add/operator/switchMap\";\r\n\r\n/**\r\n * Service to manage all api calls to perform search\r\n *\r\n * @export\r\n * @class SearchService\r\n */\r\n@Injectable()\r\nexport class SearchService {\r\n  //private baseurl = environment.apiUrl + ':44053/SearchService';\r\n  private baseurl: string;\r\n\r\n  /**\r\n   * Creates an instance of FileSystemService.\r\n   *\r\n   * @param {HttpService} httpService\r\n   * @memberof FileSystemService\r\n   */\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  private baseUrl = \"http://localhost:5000\";\r\n\r\n  /**\r\n   * Function to form a rxjx based request search term\r\n   *\r\n   * @param {Observable<string>} terms\r\n   * @param {any} params\r\n   * @returns\r\n   * @memberof SearchService\r\n   */\r\n  search(terms: Observable<string>) {\r\n    return terms\r\n      .debounceTime(500)\r\n      .distinctUntilChanged()\r\n      .switchMap((term) =>\r\n        this.searchQuery(\r\n          // Form the request parameter\r\n          { SearchTerms: [term] }\r\n        )\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Api call to search for a keyword or a file\r\n   *\r\n   * @param {any} request\r\n   * @returns\r\n   * @memberof SearchService\r\n   */\r\n  searchQuery(request) {\r\n    return this.httpService.post(this.baseUrl + \"/Search\", request);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tloadChildren: () => import('src/app/Search/search.module').then (m => m.SearchModule)\r\n\t},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnDestroy, AfterContentChecked, ChangeDetectorRef } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\nexport class AppComponent implements OnDestroy, AfterContentChecked{\r\n  title = 'base';\r\n  private isLoading: boolean = false;\r\n  private subscription: Subscription = new Subscription();\r\n\r\n  constructor(\r\n\r\n\r\n  \tprivate ref: ChangeDetectorRef\r\n  ) {\r\n  }\r\n\r\n  ngAfterContentChecked(){\r\n  \tthis.ref.detectChanges();\r\n  }\r\n\r\n  get loading():boolean {\r\n  \treturn this.isLoading;\r\n  }\r\n\r\n  ngOnDestroy(){\r\n  \tthis.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","  <router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpService } from './Search/Services/http.service';\r\nimport { SearchService } from './Search/Services/search.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule \r\n  ],\r\n  providers: [\r\n    HttpService,\r\n    SearchService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API_URL: 'https://reqres.in/api/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}